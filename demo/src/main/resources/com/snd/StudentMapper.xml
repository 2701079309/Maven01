<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.dao.infaceStudent">
  <resultMap id="BaseResultMap" type="com.example.demo.entity.Student">
    <id column="student_id" jdbcType="CHAR" property="studentId" />
    <result column="student_name" jdbcType="VARCHAR" property="studentName" />
    <result column="password" jdbcType="CHAR" property="password" />
    <result column="gender" jdbcType="CHAR" property="gender" />
    <result column="department_id" jdbcType="CHAR" property="departmentId" />
    <result column="class_id" jdbcType="CHAR" property="classId" />
    <result column="birthday" jdbcType="DATE" property="birthday" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="home_address" jdbcType="VARCHAR" property="homeAddress" />
    <result column="introduction" jdbcType="VARCHAR" property="introduction" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    student_id, student_name, password, gender, department_id, class_id, birthday, phone, 
    home_address, introduction
  </sql>
  <select id="selectByExample" parameterType="com.example.demo.entity.StudentExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from student
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from student
    where student_id = #{studentId,jdbcType=CHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from student
    where student_id = #{studentId,jdbcType=CHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.example.demo.entity.StudentExample">
    delete from student
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.example.demo.entity.Student">
    insert into student (student_id, student_name, password, 
      gender, department_id, class_id, 
      birthday, phone, home_address, 
      introduction)
    values (#{studentId,jdbcType=CHAR}, #{studentName,jdbcType=VARCHAR}, #{password,jdbcType=CHAR}, 
      #{gender,jdbcType=CHAR}, #{departmentId,jdbcType=CHAR}, #{classId,jdbcType=CHAR}, 
      #{birthday,jdbcType=DATE}, #{phone,jdbcType=VARCHAR}, #{homeAddress,jdbcType=VARCHAR}, 
      #{introduction,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.example.demo.entity.Student">
    insert into student
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="studentId != null">
        student_id,
      </if>
      <if test="studentName != null">
        student_name,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="gender != null">
        gender,
      </if>
      <if test="departmentId != null">
        department_id,
      </if>
      <if test="classId != null">
        class_id,
      </if>
      <if test="birthday != null">
        birthday,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="homeAddress != null">
        home_address,
      </if>
      <if test="introduction != null">
        introduction,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="studentId != null">
        #{studentId,jdbcType=CHAR},
      </if>
      <if test="studentName != null">
        #{studentName,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=CHAR},
      </if>
      <if test="gender != null">
        #{gender,jdbcType=CHAR},
      </if>
      <if test="departmentId != null">
        #{departmentId,jdbcType=CHAR},
      </if>
      <if test="classId != null">
        #{classId,jdbcType=CHAR},
      </if>
      <if test="birthday != null">
        #{birthday,jdbcType=DATE},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="homeAddress != null">
        #{homeAddress,jdbcType=VARCHAR},
      </if>
      <if test="introduction != null">
        #{introduction,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.example.demo.entity.StudentExample" resultType="java.lang.Long">
    select count(*) from student
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <resultMap id="studentMap" type="com.example.demo.entity.Student">
    <id property="studentId" column="student_id"/>
    <result property="studentName" column="student_name"/>
    <association property="cls" javaType="com.example.demo.entity.Class" column="class_id">
      <id property="classId" column="class_id"/>
      <result property="className" column="class_name"/>
    </association>
  </resultMap>
  <select id="listStudent" resultMap="studentMap">
    select
    student.student_id,student.student_name,class.class_name,student.class_id
    from student
    left outer join class
    on student.class_id=class.class_id
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update student
    <set>
      <if test="record.studentId != null">
        student_id = #{record.studentId,jdbcType=CHAR},
      </if>
      <if test="record.studentName != null">
        student_name = #{record.studentName,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null">
        password = #{record.password,jdbcType=CHAR},
      </if>
      <if test="record.gender != null">
        gender = #{record.gender,jdbcType=CHAR},
      </if>
      <if test="record.departmentId != null">
        department_id = #{record.departmentId,jdbcType=CHAR},
      </if>
      <if test="record.classId != null">
        class_id = #{record.classId,jdbcType=CHAR},
      </if>
      <if test="record.birthday != null">
        birthday = #{record.birthday,jdbcType=DATE},
      </if>
      <if test="record.phone != null">
        phone = #{record.phone,jdbcType=VARCHAR},
      </if>
      <if test="record.homeAddress != null">
        home_address = #{record.homeAddress,jdbcType=VARCHAR},
      </if>
      <if test="record.introduction != null">
        introduction = #{record.introduction,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update student
    set student_id = #{record.studentId,jdbcType=CHAR},
      student_name = #{record.studentName,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=CHAR},
      gender = #{record.gender,jdbcType=CHAR},
      department_id = #{record.departmentId,jdbcType=CHAR},
      class_id = #{record.classId,jdbcType=CHAR},
      birthday = #{record.birthday,jdbcType=DATE},
      phone = #{record.phone,jdbcType=VARCHAR},
      home_address = #{record.homeAddress,jdbcType=VARCHAR},
      introduction = #{record.introduction,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.demo.entity.Student">
    update student
    <set>
      <if test="studentName != null">
        student_name = #{studentName,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=CHAR},
      </if>
      <if test="gender != null">
        gender = #{gender,jdbcType=CHAR},
      </if>
      <if test="departmentId != null">
        department_id = #{departmentId,jdbcType=CHAR},
      </if>
      <if test="classId != null">
        class_id = #{classId,jdbcType=CHAR},
      </if>
      <if test="birthday != null">
        birthday = #{birthday,jdbcType=DATE},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="homeAddress != null">
        home_address = #{homeAddress,jdbcType=VARCHAR},
      </if>
      <if test="introduction != null">
        introduction = #{introduction,jdbcType=VARCHAR},
      </if>
    </set>
    where student_id = #{studentId,jdbcType=CHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.demo.entity.Student">
    update student
    set student_name = #{studentName,jdbcType=VARCHAR},
      password = #{password,jdbcType=CHAR},
      gender = #{gender,jdbcType=CHAR},
      department_id = #{departmentId,jdbcType=CHAR},
      class_id = #{classId,jdbcType=CHAR},
      birthday = #{birthday,jdbcType=DATE},
      phone = #{phone,jdbcType=VARCHAR},
      home_address = #{homeAddress,jdbcType=VARCHAR},
      introduction = #{introduction,jdbcType=VARCHAR}
    where student_id = #{studentId,jdbcType=CHAR}
  </update>
<!--  <resultMap id="BaseResultMap" type="com.example.demo.entity.Student">-->
<!--    <id column="student_id" jdbcType="CHAR" property="studentId" />-->
<!--    <result column="student_name" jdbcType="VARCHAR" property="studentName" />-->
<!--    <result column="password" jdbcType="CHAR" property="password" />-->
<!--    <result column="gender" jdbcType="CHAR" property="gender" />-->
<!--    <result column="department_id" jdbcType="CHAR" property="departmentId" />-->
<!--    <result column="class_id" jdbcType="CHAR" property="classId" />-->
<!--    <result column="birthday" jdbcType="DATE" property="birthday" />-->
<!--    <result column="phone" jdbcType="VARCHAR" property="phone" />-->
<!--    <result column="home_address" jdbcType="VARCHAR" property="homeAddress" />-->
<!--    <result column="introduction" jdbcType="VARCHAR" property="introduction" />-->
<!--  </resultMap>-->
<!--  <sql id="Example_Where_Clause">-->
<!--    <where>-->
<!--      <foreach collection="oredCriteria" item="criteria" separator="or">-->
<!--        <if test="criteria.valid">-->
<!--          <trim prefix="(" prefixOverrides="and" suffix=")">-->
<!--            <foreach collection="criteria.criteria" item="criterion">-->
<!--              <choose>-->
<!--                <when test="criterion.noValue">-->
<!--                  and ${criterion.condition}-->
<!--                </when>-->
<!--                <when test="criterion.singleValue">-->
<!--                  and ${criterion.condition} #{criterion.value}-->
<!--                </when>-->
<!--                <when test="criterion.betweenValue">-->
<!--                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}-->
<!--                </when>-->
<!--                <when test="criterion.listValue">-->
<!--                  and ${criterion.condition}-->
<!--                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">-->
<!--                    #{listItem}-->
<!--                  </foreach>-->
<!--                </when>-->
<!--              </choose>-->
<!--            </foreach>-->
<!--          </trim>-->
<!--        </if>-->
<!--      </foreach>-->
<!--    </where>-->
<!--  </sql>-->
<!--  <sql id="Update_By_Example_Where_Clause">-->
<!--    <where>-->
<!--      <foreach collection="example.oredCriteria" item="criteria" separator="or">-->
<!--        <if test="criteria.valid">-->
<!--          <trim prefix="(" prefixOverrides="and" suffix=")">-->
<!--            <foreach collection="criteria.criteria" item="criterion">-->
<!--              <choose>-->
<!--                <when test="criterion.noValue">-->
<!--                  and ${criterion.condition}-->
<!--                </when>-->
<!--                <when test="criterion.singleValue">-->
<!--                  and ${criterion.condition} #{criterion.value}-->
<!--                </when>-->
<!--                <when test="criterion.betweenValue">-->
<!--                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}-->
<!--                </when>-->
<!--                <when test="criterion.listValue">-->
<!--                  and ${criterion.condition}-->
<!--                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">-->
<!--                    #{listItem}-->
<!--                  </foreach>-->
<!--                </when>-->
<!--              </choose>-->
<!--            </foreach>-->
<!--          </trim>-->
<!--        </if>-->
<!--      </foreach>-->
<!--    </where>-->
<!--  </sql>-->
<!--  <sql id="Base_Column_List">-->
<!--    student_id, student_name, password, gender, department_id, class_id, birthday, phone, -->
<!--    home_address, introduction-->
<!--  </sql>-->
<!--  <select id="selectByExample" parameterType="com.example.demo.entity.StudentExample" resultMap="BaseResultMap">-->
<!--    select-->
<!--    <if test="distinct">-->
<!--      distinct-->
<!--    </if>-->
<!--    <include refid="Base_Column_List" />-->
<!--    from student-->
<!--    <if test="_parameter != null">-->
<!--      <include refid="Example_Where_Clause" />-->
<!--    </if>-->
<!--    <if test="orderByClause != null">-->
<!--      order by ${orderByClause}-->
<!--    </if>-->
<!--  </select>-->
<!--  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">-->
<!--    select -->
<!--    <include refid="Base_Column_List" />-->
<!--    from student-->
<!--    where student_id = #{studentId,jdbcType=CHAR}-->
<!--  </select>-->
<!--  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">-->
<!--    delete from student-->
<!--    where student_id = #{studentId,jdbcType=CHAR}-->
<!--  </delete>-->
<!--  <delete id="deleteByExample" parameterType="com.example.demo.entity.StudentExample">-->
<!--    delete from student-->
<!--    <if test="_parameter != null">-->
<!--      <include refid="Example_Where_Clause" />-->
<!--    </if>-->
<!--  </delete>-->
<!--  <insert id="insert" parameterType="com.example.demo.entity.Student">-->
<!--    insert into student (student_id, student_name, password, -->
<!--      gender, department_id, class_id, -->
<!--      birthday, phone, home_address, -->
<!--      introduction)-->
<!--    values (#{studentId,jdbcType=CHAR}, #{studentName,jdbcType=VARCHAR}, #{password,jdbcType=CHAR}, -->
<!--      #{gender,jdbcType=CHAR}, #{departmentId,jdbcType=CHAR}, #{classId,jdbcType=CHAR}, -->
<!--      #{birthday,jdbcType=DATE}, #{phone,jdbcType=VARCHAR}, #{homeAddress,jdbcType=VARCHAR}, -->
<!--      #{introduction,jdbcType=VARCHAR})-->
<!--  </insert>-->
<!--  <insert id="insertSelective" parameterType="com.example.demo.entity.Student">-->
<!--    insert into student-->
<!--    <trim prefix="(" suffix=")" suffixOverrides=",">-->
<!--      <if test="studentId != null">-->
<!--        student_id,-->
<!--      </if>-->
<!--      <if test="studentName != null">-->
<!--        student_name,-->
<!--      </if>-->
<!--      <if test="password != null">-->
<!--        password,-->
<!--      </if>-->
<!--      <if test="gender != null">-->
<!--        gender,-->
<!--      </if>-->
<!--      <if test="departmentId != null">-->
<!--        department_id,-->
<!--      </if>-->
<!--      <if test="classId != null">-->
<!--        class_id,-->
<!--      </if>-->
<!--      <if test="birthday != null">-->
<!--        birthday,-->
<!--      </if>-->
<!--      <if test="phone != null">-->
<!--        phone,-->
<!--      </if>-->
<!--      <if test="homeAddress != null">-->
<!--        home_address,-->
<!--      </if>-->
<!--      <if test="introduction != null">-->
<!--        introduction,-->
<!--      </if>-->
<!--    </trim>-->
<!--    <trim prefix="values (" suffix=")" suffixOverrides=",">-->
<!--      <if test="studentId != null">-->
<!--        #{studentId,jdbcType=CHAR},-->
<!--      </if>-->
<!--      <if test="studentName != null">-->
<!--        #{studentName,jdbcType=VARCHAR},-->
<!--      </if>-->
<!--      <if test="password != null">-->
<!--        #{password,jdbcType=CHAR},-->
<!--      </if>-->
<!--      <if test="gender != null">-->
<!--        #{gender,jdbcType=CHAR},-->
<!--      </if>-->
<!--      <if test="departmentId != null">-->
<!--        #{departmentId,jdbcType=CHAR},-->
<!--      </if>-->
<!--      <if test="classId != null">-->
<!--        #{classId,jdbcType=CHAR},-->
<!--      </if>-->
<!--      <if test="birthday != null">-->
<!--        #{birthday,jdbcType=DATE},-->
<!--      </if>-->
<!--      <if test="phone != null">-->
<!--        #{phone,jdbcType=VARCHAR},-->
<!--      </if>-->
<!--      <if test="homeAddress != null">-->
<!--        #{homeAddress,jdbcType=VARCHAR},-->
<!--      </if>-->
<!--      <if test="introduction != null">-->
<!--        #{introduction,jdbcType=VARCHAR},-->
<!--      </if>-->
<!--    </trim>-->
<!--  </insert>-->
<!--  <select id="countByExample" parameterType="com.example.demo.entity.StudentExample" resultType="java.lang.Long">-->
<!--    select count(*) from student-->
<!--    <if test="_parameter != null">-->
<!--      <include refid="Example_Where_Clause" />-->
<!--    </if>-->
<!--  </select>-->
<!--  <update id="updateByExampleSelective" parameterType="map">-->
<!--    update student-->
<!--    <set>-->
<!--      <if test="record.studentId != null">-->
<!--        student_id = #{record.studentId,jdbcType=CHAR},-->
<!--      </if>-->
<!--      <if test="record.studentName != null">-->
<!--        student_name = #{record.studentName,jdbcType=VARCHAR},-->
<!--      </if>-->
<!--      <if test="record.password != null">-->
<!--        password = #{record.password,jdbcType=CHAR},-->
<!--      </if>-->
<!--      <if test="record.gender != null">-->
<!--        gender = #{record.gender,jdbcType=CHAR},-->
<!--      </if>-->
<!--      <if test="record.departmentId != null">-->
<!--        department_id = #{record.departmentId,jdbcType=CHAR},-->
<!--      </if>-->
<!--      <if test="record.classId != null">-->
<!--        class_id = #{record.classId,jdbcType=CHAR},-->
<!--      </if>-->
<!--      <if test="record.birthday != null">-->
<!--        birthday = #{record.birthday,jdbcType=DATE},-->
<!--      </if>-->
<!--      <if test="record.phone != null">-->
<!--        phone = #{record.phone,jdbcType=VARCHAR},-->
<!--      </if>-->
<!--      <if test="record.homeAddress != null">-->
<!--        home_address = #{record.homeAddress,jdbcType=VARCHAR},-->
<!--      </if>-->
<!--      <if test="record.introduction != null">-->
<!--        introduction = #{record.introduction,jdbcType=VARCHAR},-->
<!--      </if>-->
<!--    </set>-->
<!--    <if test="_parameter != null">-->
<!--      <include refid="Update_By_Example_Where_Clause" />-->
<!--    </if>-->
<!--  </update>-->
<!--  <update id="updateByExample" parameterType="map">-->
<!--    update student-->
<!--    set student_id = #{record.studentId,jdbcType=CHAR},-->
<!--      student_name = #{record.studentName,jdbcType=VARCHAR},-->
<!--      password = #{record.password,jdbcType=CHAR},-->
<!--      gender = #{record.gender,jdbcType=CHAR},-->
<!--      department_id = #{record.departmentId,jdbcType=CHAR},-->
<!--      class_id = #{record.classId,jdbcType=CHAR},-->
<!--      birthday = #{record.birthday,jdbcType=DATE},-->
<!--      phone = #{record.phone,jdbcType=VARCHAR},-->
<!--      home_address = #{record.homeAddress,jdbcType=VARCHAR},-->
<!--      introduction = #{record.introduction,jdbcType=VARCHAR}-->
<!--    <if test="_parameter != null">-->
<!--      <include refid="Update_By_Example_Where_Clause" />-->
<!--    </if>-->
<!--  </update>-->
<!--  <update id="updateByPrimaryKeySelective" parameterType="com.example.demo.entity.Student">-->
<!--    update student-->
<!--    <set>-->
<!--      <if test="studentName != null">-->
<!--        student_name = #{studentName,jdbcType=VARCHAR},-->
<!--      </if>-->
<!--      <if test="password != null">-->
<!--        password = #{password,jdbcType=CHAR},-->
<!--      </if>-->
<!--      <if test="gender != null">-->
<!--        gender = #{gender,jdbcType=CHAR},-->
<!--      </if>-->
<!--      <if test="departmentId != null">-->
<!--        department_id = #{departmentId,jdbcType=CHAR},-->
<!--      </if>-->
<!--      <if test="classId != null">-->
<!--        class_id = #{classId,jdbcType=CHAR},-->
<!--      </if>-->
<!--      <if test="birthday != null">-->
<!--        birthday = #{birthday,jdbcType=DATE},-->
<!--      </if>-->
<!--      <if test="phone != null">-->
<!--        phone = #{phone,jdbcType=VARCHAR},-->
<!--      </if>-->
<!--      <if test="homeAddress != null">-->
<!--        home_address = #{homeAddress,jdbcType=VARCHAR},-->
<!--      </if>-->
<!--      <if test="introduction != null">-->
<!--        introduction = #{introduction,jdbcType=VARCHAR},-->
<!--      </if>-->
<!--    </set>-->
<!--    where student_id = #{studentId,jdbcType=CHAR}-->
<!--  </update>-->
<!--  <update id="updateByPrimaryKey" parameterType="com.example.demo.entity.Student">-->
<!--    update student-->
<!--    set student_name = #{studentName,jdbcType=VARCHAR},-->
<!--      password = #{password,jdbcType=CHAR},-->
<!--      gender = #{gender,jdbcType=CHAR},-->
<!--      department_id = #{departmentId,jdbcType=CHAR},-->
<!--      class_id = #{classId,jdbcType=CHAR},-->
<!--      birthday = #{birthday,jdbcType=DATE},-->
<!--      phone = #{phone,jdbcType=VARCHAR},-->
<!--      home_address = #{homeAddress,jdbcType=VARCHAR},-->
<!--      introduction = #{introduction,jdbcType=VARCHAR}-->
<!--    where student_id = #{studentId,jdbcType=CHAR}-->
<!--  </update>-->
<!--  <resultMap id="BaseResultMap" type="com.example.demo.entity.Student">-->
<!--    <id column="student_id" jdbcType="INTEGER" property="studentId" />-->
<!--    <result column="student_name" jdbcType="CHAR" property="studentName" />-->
<!--    <result column="class_id" jdbcType="INTEGER" property="classId" />-->
<!--  </resultMap>-->
<!--  <sql id="Example_Where_Clause">-->
<!--    <where>-->
<!--      <foreach collection="oredCriteria" item="criteria" separator="or">-->
<!--        <if test="criteria.valid">-->
<!--          <trim prefix="(" prefixOverrides="and" suffix=")">-->
<!--            <foreach collection="criteria.criteria" item="criterion">-->
<!--              <choose>-->
<!--                <when test="criterion.noValue">-->
<!--                  and ${criterion.condition}-->
<!--                </when>-->
<!--                <when test="criterion.singleValue">-->
<!--                  and ${criterion.condition} #{criterion.value}-->
<!--                </when>-->
<!--                <when test="criterion.betweenValue">-->
<!--                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}-->
<!--                </when>-->
<!--                <when test="criterion.listValue">-->
<!--                  and ${criterion.condition}-->
<!--                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">-->
<!--                    #{listItem}-->
<!--                  </foreach>-->
<!--                </when>-->
<!--              </choose>-->
<!--            </foreach>-->
<!--          </trim>-->
<!--        </if>-->
<!--      </foreach>-->
<!--    </where>-->
<!--  </sql>-->
<!--  <sql id="Update_By_Example_Where_Clause">-->
<!--    <where>-->
<!--      <foreach collection="example.oredCriteria" item="criteria" separator="or">-->
<!--        <if test="criteria.valid">-->
<!--          <trim prefix="(" prefixOverrides="and" suffix=")">-->
<!--            <foreach collection="criteria.criteria" item="criterion">-->
<!--              <choose>-->
<!--                <when test="criterion.noValue">-->
<!--                  and ${criterion.condition}-->
<!--                </when>-->
<!--                <when test="criterion.singleValue">-->
<!--                  and ${criterion.condition} #{criterion.value}-->
<!--                </when>-->
<!--                <when test="criterion.betweenValue">-->
<!--                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}-->
<!--                </when>-->
<!--                <when test="criterion.listValue">-->
<!--                  and ${criterion.condition}-->
<!--                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">-->
<!--                    #{listItem}-->
<!--                  </foreach>-->
<!--                </when>-->
<!--              </choose>-->
<!--            </foreach>-->
<!--          </trim>-->
<!--        </if>-->
<!--      </foreach>-->
<!--    </where>-->
<!--  </sql>-->
<!--  <sql id="Base_Column_List">-->
<!--    student_id, student_name, class_id-->
<!--  </sql>-->
<!--  <select id="selectByExample" parameterType="com.example.demo.entity.StudentExample" resultMap="BaseResultMap">-->
<!--    select-->
<!--    <if test="distinct">-->
<!--      distinct-->
<!--    </if>-->
<!--    <include refid="Base_Column_List" />-->
<!--    from student-->
<!--    <if test="_parameter != null">-->
<!--      <include refid="Example_Where_Clause" />-->
<!--    </if>-->
<!--    <if test="orderByClause != null">-->
<!--      order by ${orderByClause}-->
<!--    </if>-->
<!--  </select>-->
<!--  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">-->
<!--    select -->
<!--    <include refid="Base_Column_List" />-->
<!--    from student-->
<!--    where student_id = #{studentId,jdbcType=INTEGER}-->
<!--  </select>-->
<!--  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">-->
<!--    delete from student-->
<!--    where student_id = #{studentId,jdbcType=INTEGER}-->
<!--  </delete>-->
<!--  <delete id="deleteByExample" parameterType="com.example.demo.entity.StudentExample">-->
<!--    delete from student-->
<!--    <if test="_parameter != null">-->
<!--      <include refid="Example_Where_Clause" />-->
<!--    </if>-->
<!--  </delete>-->
<!--  <insert id="insert" parameterType="com.example.demo.entity.Student">-->
<!--    insert into student (student_id, student_name, class_id-->
<!--      )-->
<!--    values (#{studentId,jdbcType=INTEGER}, #{studentName,jdbcType=CHAR}, #{classId,jdbcType=INTEGER}-->
<!--      )-->
<!--  </insert>-->
<!--  <insert id="insertSelective" parameterType="com.example.demo.entity.Student">-->
<!--    insert into student-->
<!--    <trim prefix="(" suffix=")" suffixOverrides=",">-->
<!--      <if test="studentId != null">-->
<!--        student_id,-->
<!--      </if>-->
<!--      <if test="studentName != null">-->
<!--        student_name,-->
<!--      </if>-->
<!--      <if test="classId != null">-->
<!--        class_id,-->
<!--      </if>-->
<!--    </trim>-->
<!--    <trim prefix="values (" suffix=")" suffixOverrides=",">-->
<!--      <if test="studentId != null">-->
<!--        #{studentId,jdbcType=INTEGER},-->
<!--      </if>-->
<!--      <if test="studentName != null">-->
<!--        #{studentName,jdbcType=CHAR},-->
<!--      </if>-->
<!--      <if test="classId != null">-->
<!--        #{classId,jdbcType=INTEGER},-->
<!--      </if>-->
<!--    </trim>-->
<!--  </insert>-->
<!--  <select id="countByExample" parameterType="com.example.demo.entity.StudentExample" resultType="java.lang.Long">-->
<!--    select count(*) from student-->
<!--    <if test="_parameter != null">-->
<!--      <include refid="Example_Where_Clause" />-->
<!--    </if>-->
<!--  </select>-->
<!--  <update id="updateByExampleSelective" parameterType="map">-->
<!--    update student-->
<!--    <set>-->
<!--      <if test="record.studentId != null">-->
<!--        student_id = #{record.studentId,jdbcType=INTEGER},-->
<!--      </if>-->
<!--      <if test="record.studentName != null">-->
<!--        student_name = #{record.studentName,jdbcType=CHAR},-->
<!--      </if>-->
<!--      <if test="record.classId != null">-->
<!--        class_id = #{record.classId,jdbcType=INTEGER},-->
<!--      </if>-->
<!--    </set>-->
<!--    <if test="_parameter != null">-->
<!--      <include refid="Update_By_Example_Where_Clause" />-->
<!--    </if>-->
<!--  </update>-->
<!--  <update id="updateByExample" parameterType="map">-->
<!--    update student-->
<!--    set student_id = #{record.studentId,jdbcType=INTEGER},-->
<!--      student_name = #{record.studentName,jdbcType=CHAR},-->
<!--      class_id = #{record.classId,jdbcType=INTEGER}-->
<!--    <if test="_parameter != null">-->
<!--      <include refid="Update_By_Example_Where_Clause" />-->
<!--    </if>-->
<!--  </update>-->
<!--  <update id="updateByPrimaryKeySelective" parameterType="com.example.demo.entity.Student">-->
<!--    update student-->
<!--    <set>-->
<!--      <if test="studentName != null">-->
<!--        student_name = #{studentName,jdbcType=CHAR},-->
<!--      </if>-->
<!--      <if test="classId != null">-->
<!--        class_id = #{classId,jdbcType=INTEGER},-->
<!--      </if>-->
<!--    </set>-->
<!--    where student_id = #{studentId,jdbcType=INTEGER}-->
<!--  </update>-->
<!--  <update id="updateByPrimaryKey" parameterType="com.example.demo.entity.Student">-->
<!--    update student-->
<!--    set student_name = #{studentName,jdbcType=CHAR},-->
<!--      class_id = #{classId,jdbcType=INTEGER}-->
<!--    where student_id = #{studentId,jdbcType=INTEGER}-->
<!--  </update>-->
</mapper>